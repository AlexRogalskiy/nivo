service:
  name: nivo

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-iamroles:
    defaultInherit: true
  # globalTables:
  #   regions:
  #     - us-east-1
  #   createStack: true
  prune:
    automatic: true
    number: 3

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-iamroles
  # - serverless-create-global-dynamodb-table
  - serverless-prune-plugin
  - serverless-plugin-tracing

provider:
  name: aws
  runtime: nodejs12.x
  frameworkVersion: ‘1.64.1’
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  timeout: 900
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    DEBUG: '*'
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

functions:
  calculateSegmentsLength:
    handler: src/functions/calculateSegmentsLength.handle
    memorySize: 512
    iamRoleStatements:
      - Effect: Allow
        Action: s3:GetObject
        Resource: "arn:aws:s3:::nivo-uploads/*"
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: "*"
    layers:
      - arn:aws:lambda:us-east-1:011801494293:layer:ffmpeg:2

  createTranscodedSegment:
    handler: src/functions/createTranscodedSegment.handle
    memorySize: 3008
    iamRoleStatements:
      - Effect: Allow
        Action: s3:GetObject
        Resource: "arn:aws:s3:::nivo-uploads/*"
      - Effect: Allow
        Action: s3:PutObject
        Resource: "arn:aws:s3:::nivo-segments/*"
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: "*"
    layers:
      - arn:aws:lambda:us-east-1:011801494293:layer:ffmpeg:2

resources:
  Resources:
    # DynamoDB

    dbNivoVideos:
      # Store info about input videos
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: nivoVideos
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"

    dbNivoJobs:
      # Store info about each transcode job for a video
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: nivoJobs
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"

    dbNivoSegments:
      # Store info about each segment status from a job
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: nivoSegments
        AttributeDefinitions:
          - AttributeName: jobId
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: jobId
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"

    # S3
    nivoUploads:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: nivo-uploads
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - POST
                - DELETE
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"

    nivoSegments:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: nivo-segments

    nivoTranscoded:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: nivo-transcoded
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - DELETE
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
